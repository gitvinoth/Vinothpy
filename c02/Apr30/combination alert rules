

Add support for complex rules in rule engine. complex means more than 1 condition of same or different sensors in a rule. all conditions will be joined by "AND"Rule should be added to rule table along with query. Any combination of existing rules should be supported. Max of 10 conditions in a rule. Average 2 to 4.Create a separate workflow for Rule execution of complex queries. this task will only execute rules as per point #3Schedule this workflow to be triggered starting at x hrs 15/45 mins (15 mins post the data workflows which is at x hrs 0/30 mins).The rule should be executed successfully in the existing rule engine and process anomalies as applicable.

1 - pt1 rule_id-1, group_id - 1, query - "query1"
2 - fm1 rule_id-1, group_id - 1, query - "query1"
3 - dss rule_id-1, group_id - 1, query - "query1"

4 - pt1 rule_id-1, group_id - 2, query - "query2"
5 - fm2 rule_id-1, group_id - 2, query - "query2"
6 - dss rule_id-1, group_id - 2, query - "query2"


pt1,pt2,fm1,fm2,dss
 
rule (rule_id, group_id, query, conditions)
VALUES
(1, 1, 'query1', '[{"sensor": "pt1"} && {"sensor": "flm1"} && {"sensor": "dss"}]'),
(1, 2, 'query2', '[{"sensor": "pt1"} && {"sensor": "flm2"} && {"sensor": "dss"}]'),
(1, 3, 'query3', '[{"sensor": "pt2"} && {"sensor": "flm1"} && {"sensor": "dss"}]'),
(1, 4, 'query4', '[{"sensor": "pt2"}&& {"sensor": "flm2"} && {"sensor": "dss"}]');
 
Combination math aka m! * n1 * o! --> Confirmed
Input is one json only and our assumption of single rules execution first , then  sequentially the complex-combination-logic run would be executed as per the jSON variable condition {condition: n} if condition of n more than 1,  for one rule_id then we would perform this combination logic execution (for AND)- Correct


